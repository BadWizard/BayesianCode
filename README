
#using Bayesian Code requires the platform specific compilation of a mex wrapper for DCPROGS - the reimplementation of the DC likelihood for ion-channels

#aliases to compile mex wrapper on Mac

alias compile_mex='c++ -std=c++11 -stdlib=libc++ -c  -I/path/to/dcprogs/likelihood -I/path/to/dcprogs/build -I/path/to/include/eigen3 -I/Applications/$MATLAB_VERSION.app/extern/include -I/Applications/$MATLAB_VERSION.app/simulink/include -DMATLAB_MEX_FILE -fno-common -no-cpp-precomp -fexceptions -arch x86_64 -isysroot / -mmacosx-version-min=10.8  -DMX_COMPAT_32 -O2 -DNDEBUG  "/path/to/git-repo/C/likelihood_mex.cpp" -o /path/to/git-repo/C/likelihood_mex.o'

alias link_mex='c++ -stdlib=libc++ -O -Wl,-twolevel_namespace -undefined error -arch x86_64 -Wl,-syslibroot,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/ -mmacosx-version-min=10.8 -bundle -Wl,-exported_symbols_list,/Applications/$MATLAB_VERSION.app/extern/lib/maci64/mexFunction.map -L/usr/local/lib -o  "/path/to/git-repo/C/likelihood_mex.mexmaci64"  /path/to/git-repo/C/likelihood_mex.o -L/path/to/dcprogs/build/likelihood -l likelihood  -L/Applications/$MATLAB_VERSION.app/bin/maci64 -lmx -lmex -lmat -lstdc++'


#compiling mex wrapper for dcprogs in linux
c++ -std=c++11 -c -I/path/to/dcprogs/include -I/path/to/dcprogs/include/dcprogs/likelihood -I/path/to/Eigen -I/usr/local/MATLAB/$MATLAB_VERSION/extern/include -I/usr/local/MATLAB/$MATLAB_VERSION/simulink/include -DMATLAB_MEX_FILE -D_GNU_SOURCE -fPIC -fno-omit-frame-pointer -pthread  -DMX_COMPAT_32 -O -DNDEBUG /path/to/git-repo/C/likelihood_mex.cpp -o /path/to/git-repo/C/likelihood_mex.o
g++ -O -pthread -shared -Wl,--version-script,/usr/local/MATLAB/$MATLAB_VERSION/extern/lib/glnxa64/mexFunction.map -Wl,--no-undefined -o  /path/to/git-repo/C/likelihood_mex.mexa64  /path/to/git-repo/C/likelihood_mex.o  -Wl,-rpath-link,/usr/local/MATLAB/$MATLAB_VERSION/bin/glnxa64 -L/usr/local/MATLAB/$MATLAB_VERSION/bin/glnxa64 -lmx -lmex -lmat -lm -L/path/to/dcprogs/lib -llikelihood

#compiling experimental mex files on linux
g++ -c -std=c++11  -I/path/to/dcprogs/include/dcprogs/likelihood -I/path/to/dcprogs/include/dcprogs -I/path/to/Eigen -I/usr/local/MATLAB/$MATLAB_VERSION/extern/include -I/usr/local/MATLAB/$MATLAB_VERSION/simulink/include -DMATLAB_MEX_FILE -D_GNU_SOURCE -fPIC -fno-omit-frame-pointer -pthread  -DMX_COMPAT_32 -O -DNDEBUG  "/path/to/git-repo/C/c_likelihood.cpp"
g++ -c -std=c++11  -I/path/to/dcprogs/include/dcprogs/likelihood -I/path/to/dcprogs/include/dcprogs -I/path/to/Eigen -I/usr/local/MATLAB/$MATLAB_VERSION/extern/include -I/usr/local/MATLAB/$MATLAB_VERSION/simulink/include -DMATLAB_MEX_FILE -D_GNU_SOURCE -fPIC -fno-omit-frame-pointer -pthread  -DMX_COMPAT_32 -O -DNDEBUG  "/path/to/git-repo/C/calc_lik_mex.cpp"
g++ -O -pthread -shared -Wl,--version-script,/usr/local/MATLAB/$MATLAB_VERSION/extern/lib/glnxa64/mexFunction.map -Wl,--no-undefined -o  /path/to/git-repo/C/calc_lik_mex.mexa64  /path/to/git-repo/C/calc_lik_mex.o /path/to/git-repo/C/c_likelihood.o -Wl,-rpath-link,/usr/local/MATLAB/$MATLAB_VERSION/bin/glnxa64 -L/usr/local/$MATLAB_VERSION/R2013a/bin/glnxa64 -lmx -lmex -lmat -lm -L/path/to/dcprogs/lib -llikelihood
